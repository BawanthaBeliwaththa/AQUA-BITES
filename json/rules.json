{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",
    ".indexOn": ["timestamp", "requestedAt", "status", "user"],
    
    "admins": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.token.email === ' YOUR_MAIL@YOUR_MAIL.COM' || root.child('admins').child(auth.uid).exists())",
      "$uid": {
        ".validate": "newData.isBoolean() && newData.val() === true && (!data.exists() || newData.exists())"
      }
    },
    
    "authorizedUsers": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.token.email === ' YOUR_MAIL@YOUR_MAIL.COM' || root.child('admins').child(auth.uid).exists())",
      "$uid": {
        ".validate": "newData.hasChildren(['email', 'approved', 'permissions'])",
        
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i)"
        },
        "displayName": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "photoURL": {
          ".validate": "newData.isString() && newData.val().matches(/^https?:\\/\\/.+/) || newData.val() === null"
        },
        "approved": {
          ".validate": "newData.isBoolean()"
        },
        "approvedAt": {
          ".validate": "newData.isNumber() && newData.val() <= now || newData.val() === null"
        },
        "approvedBy": {
          ".validate": "newData.isString() || newData.val() === null"
        },
        "permissions": {
          ".validate": "newData.hasChildren(['feed', 'settings', 'history'])",
          "feed": {
            ".validate": "newData.isBoolean()"
          },
          "settings": {
            ".validate": "newData.isBoolean()"
          },
          "history": {
            ".validate": "newData.isBoolean()"
          }
        },
        "telegramId": {
          ".validate": "newData.isString() || newData.isNumber() || newData.val() === null"
        },
        "lastActive": {
          ".validate": "newData.isNumber() && newData.val() <= now || newData.val() === null"
        }
      }
    },
    
    "device": {
      "sensors": {
        ".read": true,
        ".write": "auth != null && (auth.token.email === ' YOUR_MAIL@YOUR_MAIL.COM' || root.child('authorizedUsers').child(auth.uid).child('approved').val() === true)",
        
        "temperature": {
          ".validate": "newData.isNumber() && newData.val() >= -20 && newData.val() <= 100"
        },
        "phLevel": {
          ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 14"
        },
        "lastUpdated": {
          ".validate": "newData.isNumber() && newData.val() <= now"
        }
      },
      
      "status": {
        ".read": true,
        ".write": "auth != null && (auth.token.email === ' YOUR_MAIL@YOUR_MAIL.COM' || root.child('authorizedUsers').child(auth.uid).child('approved').val() === true)",
        
        "motor": {
          ".validate": "newData.isString() && (newData.val() === 'idle' || newData.val() === 'rotating' || newData.val() === 'error' || newData.val() === 'maintenance')"
        },
        "lastFeeding": {
          ".validate": "newData.isNumber() && newData.val() <= now"
        },
        "nextFeeding": {
          ".validate": "newData.isNumber() && newData.val() >= now"
        },
        "error": {
          ".validate": "newData.isString() || newData.val() === null"
        },
        "battery": {
          ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 100"
        }
      },
      
      "settings": {
        ".read": "auth != null && (auth.token.email === 'YOUR_MAIL@YOUR_MAIL.COM' || (root.child('authorizedUsers').child(auth.uid).child('approved').val() === true && root.child('authorizedUsers').child(auth.uid).child('permissions').child('settings').val() === true))",
        ".write": "auth != null && (auth.token.email === ' YOUR_MAIL@YOUR_MAIL.COM' || (root.child('authorizedUsers').child(auth.uid).child('approved').val() === true && root.child('authorizedUsers').child(auth.uid).child('permissions').child('settings').val() === true))",
        
        "feedingEnabled": {
          ".validate": "newData.isBoolean()"
        },
        "servoEnabled": {
          ".validate": "newData.isBoolean()"
        },
        "schedule": {
          ".validate": "newData.hasChildren(['time1', 'time2', 'time3'])",
          "time1": {
            ".validate": "newData.isString() && newData.val().matches(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/)"
          },
          "time2": {
            ".validate": "newData.isString() && newData.val().matches(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/)"
          },
          "time3": {
            ".validate": "newData.isString() && newData.val().matches(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/)"
          }
        },
        "portionSize": {
          ".validate": "newData.isNumber() && newData.val() > 0 && newData.val() <= 100"
        },
        "temperatureAlert": {
          ".validate": "newData.isNumber() && newData.val() >= 10 && newData.val() <= 40"
        },
        "maintenanceMode": {
          ".validate": "newData.isBoolean()"
        }
      },
      
      "commands": {
        ".read": "auth != null",
        ".write": "auth != null",
        "latest": {
          ".validate": "newData.hasChildren(['feed', 'requestedAt', 'requestedBy', 'source', 'status'])",
          
          "feed": {
            ".validate": "newData.isBoolean()"
          },
          "servo": {
            ".validate": "newData.isBoolean() || newData.val() === null"
          },
          "requestedAt": {
            ".validate": "newData.isNumber() && newData.val() <= now"
          },
          "requestedBy": {
            ".validate": "newData.isString()"
          },
          "source": {
            ".validate": "newData.isString() && (newData.val() === 'web' || newData.val() === 'telegram' || newData.val() === 'api')"
          },
          "status": {
            ".validate": "newData.isString() && (newData.val() === 'pending' || newData.val() === 'processing' || newData.val() === 'completed' || newData.val() === 'failed')"
          },
          "completedAt": {
            ".validate": "newData.isNumber() && newData.val() <= now || newData.val() === null"
          },
          "userId": {
            ".validate": "newData.isString() || newData.val() === null"
          }
        }
      }
    },
    
    "feedingHistory": {
      ".read": "auth != null && (auth.token.email === 'YOUR_MAIL@YOUR_MAIL.COM' || (root.child('authorizedUsers').child(auth.uid).child('approved').val() === true && root.child('authorizedUsers').child(auth.uid).child('permissions').child('history').val() === true))",
      ".write": "auth != null",
      "$feedId": {
        ".validate": "newData.hasChildren(['timestamp', 'user', 'type', 'status', 'method'])",
        
        "timestamp": {
          ".validate": "newData.isNumber() && newData.val() <= now"
        },
        "user": {
          ".validate": "newData.isString()"
        },
        "type": {
          ".validate": "newData.isString() && (newData.val() === 'manual' || newData.val() === 'scheduled' || newData.val() === 'web' || newData.val() === 'telegram' || newData.val() === 'auto')"
        },
        "method": {
          ".validate": "newData.isString() && (newData.val() === 'stepper' || newData.val() === 'servo')"
        },
        "status": {
          ".validate": "newData.isString() && (newData.val() === 'completed' || newData.val() === 'failed' || newData.val() === 'skipped' || newData.val() === 'partial')"
        },
        "portionSize": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "temperature": {
          ".validate": "newData.isNumber() && newData.val() >= -20 && newData.val() <= 100 || newData.val() === null"
        },
        "commandId": {
          ".validate": "newData.isString() || newData.val() === null"
        },
        "notes": {
          ".validate": "newData.isString() || newData.val() === null"
        },
        "source": {
          ".validate": "newData.isString() || newData.val() === null"
        },
        "userId": {
          ".validate": "newData.isString() || newData.val() === null"
        }
      }
    },
    
    "systemLogs": {
      ".read": "auth != null && (auth.token.email === 'YOUR_MAIL@YOUR_MAIL.COM' || root.child('admins').child(auth.uid).exists())",
      ".write": "auth != null && (auth.token.email === ' YOUR_MAIL@YOUR_MAIL.COM' || root.child('admins').child(auth.uid).exists())",
      "$logId": {
        ".validate": "newData.hasChildren(['timestamp', 'type', 'message'])",
        
        "timestamp": {
          ".validate": "newData.isNumber() && newData.val() <= now"
        },
        "type": {
          ".validate": "newData.isString() && (newData.val() === 'info' || newData.val() === 'warning' || newData.val() === 'error' || newData.val() === 'security' || newData.val() === 'debug')"
        },
        "message": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "userId": {
          ".validate": "newData.isString() || newData.val() === null"
        },
        "ipAddress": {
          ".validate": "newData.isString() || newData.val() === null"
        },
        "details": {
          ".validate": "newData.hasChildren() || newData.val() === null"
        }
      }
    },
    
    "userActivity": {
      ".read": "auth != null && (auth.token.email === 'YOUR_MAIL@YOUR_MAIL.COM' || root.child('admins').child(auth.uid).exists())",
      ".write": "auth != null",
      "$userId": {
        "lastLogin": {
          ".validate": "newData.isNumber() && newData.val() <= now"
        },
        "loginCount": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "lastCommand": {
          ".validate": "newData.isString() || newData.val() === null"
        },
        "deviceInfo": {
          ".validate": "newData.hasChildren() || newData.val() === null"
        }
      }
    }
  }
}
